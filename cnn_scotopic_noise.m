function cnn_scotopic_noise(dataset)
% cnn_scotopic_noise(dataset)
%  dataset: 'mnist' or 'cifar'
%  Evaluate the trained model under various noise conditions: dark current,
%  amplification noise, fixed-pattern noise and rotational jitter noise.
%  Store results in getScotopicConfig.data_dir
%  After running, run plot_sensor_noise_effect to visualize results.
% (c) 2016 Bo Chen
% bchen3@caltech.edu

switch dataset
  case 'mnist'
    lr = 0.004;
    thArray = log(logspace(log10(0.1+1e-4),log10(1-1e-4),200));
    thArray = thArray([1:5:195 196:end]);

    eval_func = @(amp_sigma, fpn_sigma, snr, jitter) ...
        cnn_scotopic('dataset','mnist',...
                     'modelType','waldnet-wb1',...
                     'modelName',sprintf('val_lrx%ga0.00f',lr),...
                     'sp', struct('mode','batch','alpha',0, ...
                                  'estimate_PPP',false, ...
                                  'amp_sigma', amp_sigma, ...
                                  'fpn_sigma', fpn_sigma, ...
                                  'snr', snr,...
                                  'jitter',jitter), ...
                     'thArray', thArray, ...
                     'validate', true, ...
                     'whitenData',false,...
                     'contrastNormalization',false);
  case 'cifar'
     eval_func = @(amp_sigma, fpn_sigma, snr, jitter) ...
         cnn_scotopic('dataset','cifar',...
                      'modelType','waldnet-wb1',...
                      'modelName',sprintf('a1.00f'),...
                      'sp', struct('mode','batch','alpha',1,...
                                   'estimate_PPP',false, ...
                                   'amp_sigma', amp_sigma, ...
                                   'fpn_sigma', fpn_sigma, ...
                                   'snr', snr, ...
                                   'jitter',jitter), ...
                      'validate', false, ...
                      'whitenData',true,...
                      'contrastNormalization',true);
  otherwise
    error('Unknown dataset %s\n', dataset);
end

%% Effect of jittering
jitterArray = [0.01 0.1]; jitter_N = length(jitterArray);
for jitter_I = 1:jitter_N
    SNR = 0.97/0.03;
    amp_sigma = 0.0;
    fpn_sigma = 0.0;
    jitter = jitterArray(jitter_I);
    eval_func(amp_sigma, fpn_sigma, SNR, jitter);
end

%% Joint effect of amplifier noise and fixed-pattern noise %%
ampArray = [0.15 0.22 0.5 1]; amp_N =length(ampArray);
fpnArray = [0.01 0.03 0.10 0.5]; fpn_N = length(fpnArray);
for amp_I = 1:amp_N
    for fpn_I = 1:fpn_N
        amp_sigma = ampArray(amp_I);
        fpn_sigma = fpnArray(fpn_I);
        eval_func(amp_sigma, fpn_sigma, 0.97/0.03, 0);
    end
end


%% Effect of Signal-to-noise ratio
SNRArray = [0.97/0.03,20,13,10]; SNR_N =length(SNRArray);
for SNR_I = 1:SNR_N
    SNR = SNRArray(SNR_I);
    amp_sigma = 0.15;
    fpn_sigma = 0.03;
    eval_func(amp_sigma, fpn_sigma, SNR, 0);
end



end